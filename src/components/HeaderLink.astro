---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + subpath?.[0];
---

<a href={href} class:list={[{ className, active: isActive }]} {...props}>
  <span class:list={[{ active: isActive }]}><slot /></span>
</a>

<style lang="scss">
  a {
    @apply transition-base select-none decoration-none;

    &:hover > span {
      &:not(.active):after {
        @apply transform-scale-x-100 transform-origin-bottom-left;
      }
    }
  }
  span {
    @apply color-text relative h-full px-8 mx-8 inline-block decoration-none;

    &.active {
      @apply font-bold;
    }
    &:after {
      content: "";
      @apply absolute w-full h-2 bottom-0 left-0 bg-text;
    }

    &:not(.active):after {
      transition: transform 0.25s ease-out;
      @apply transform-scale-x-0 transform-origin-bottom-right;
    }
  }
</style>
