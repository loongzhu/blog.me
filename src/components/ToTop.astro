---

---

<script>
  import { useWindowScroll, watchDeep } from "@vueuse/core";

  class ToTop extends HTMLElement {
    constructor() {
      super();

      const totop = () => {
        window.scrollTo({
          top: 0,
          behavior: "smooth",
        });
      };

      const element = this.querySelector("button");

      element?.addEventListener("click", (e) => totop());

      const { y } = useWindowScroll();

      watchDeep(
        y,
        (value) => {
          const element = this.querySelector("button");

          element.style.display = value > 300 ? "grid" : "none";

          if (value > 300) {
            element?.classList.remove("op0", "pointer-events-none");
          } else {
            element?.classList.add("op0", "pointer-events-none");
          }
        },
        {
          immediate: true,
        }
      );
    }
    connectedCallback() {
      // console.log("The element has been attached to the DOM.");
    }

    disconnectedCallback() {
      // console.log("The element has been removed from the DOM.");
    }

    adoptedCallback() {
      // console.log("The element has been moved to a new DOM.");
    }

    attributeChangedCallback(name, oldValue, newValue) {
      // console.log(`${name} has changed from ${oldValue} to ${newValue}.`);
    }
  }

  customElements.define("to-top", ToTop);
</script>

<to-top>
  <button class="op0" btn-circle></button>
</to-top>

<style lang="scss">
  to-top {
    @apply fixed bottom-20 right-20 z-1000;
  }
  button {
    &::after {
      content: "ðŸ¡¡";
      @apply absolute;
    }
  }
</style>
