---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + subpath?.[0];
---

<a href={href} class:list={[{ className, active: isActive }]} {...props}>
  <span class:list={[{ active: isActive }]}><slot /></span>
</a>

<style lang="scss">
  a {
    transition: all 0.4s ease-out;

    &:hover > span {
      &:not(.active):after {
        transform: scaleX(1);
        transform-origin: bottom left;
      }
    }
  }
  span {
    display: inline-block;
    text-decoration: none;
    position: relative;
    color: var(--text-color);
    padding: 0 0.5rem;
    height: 100%;

    &.active {
      font-weight: bolder;
    }
    &:after {
      content: "";
      position: absolute;
      width: 100%;
      height: 2px;
      bottom: 0;
      left: 0;
      background-color: var(--text-color);
    }

    &:not(.active):after {
      transform: scaleX(0);
      transform-origin: bottom right;
      transition: transform 0.25s ease-out;
    }
  }
</style>
